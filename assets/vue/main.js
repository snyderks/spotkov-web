var retrieveToken = function () {
  var token = null
  if (localStorage.getItem("access_token") !== null) {
     token = {}
     token.access_token = localStorage.getItem("access_token")
     token.expiry = localStorage.getItem("expiry")
     token.refresh_token = localStorage.getItem("refresh_token")
     token.token_type = localStorage.getItem("token_type")
  }
  return token
}

Vue.component('spotify-login', {
  template: '<button class="btn login-btn" v-on:click="spotifyLogin">Login to Spotify</button>',
  replace: true,
  methods: {
    spotifyLogin: function () {
      $.ajax({
        url: 'api/spotifyLoginUrl',
        type: 'GET',
        dataType: 'json'
      })
      .done(function(data) {
        console.log(data)
        if (data.URL !== undefined) {
          if (data.URL.match(/https:\/\/accounts.spotify.com\/authorize?/) != null) {
            window.location = data.URL
          }
        } else {
          fail()
        }

      })
      .fail(function(data) {
        console.log("error")
        console.log(data)
      })
    }
  }
})

var app = new Vue({
  el: '#app',
  data: {
    songs: [],
    songName: localStorage.getItem("songName") === null ? "" : localStorage.getItem("songName"),
    artistName: localStorage.getItem("artistName") === null ? "" : localStorage.getItem("artistName"),
    lastFMID: localStorage.getItem("lastFMID") === null ? "" : localStorage.getItem("lastFMID"),
    length: "20",
    error: "",
    activity: false
  },
  computed: {
    loggedIn: function () {
      return localStorage.getItem("access_token") !== null
    },
    songLabel: function () {
      return parseInt(this.length) === 1 ? "song" : "songs"
    },
    playlistGenerated: function () {
      return this.songs.length > 0
    }
  },
  methods: {
    getSongs: function () {
      this.songs = [];

      /* Input validation */
      var valid = true;
      if (this.songName.length === 0) {
        $(".song-name").addClass("invalid")
        valid = false
      } else {
        $(".song-name").removeClass("invalid")
        localStorage.setItem("songName", this.songName)
      }

      if (this.artistName.length === 0) {
        $(".artist-name").addClass("invalid")
        valid = false
      } else {
        $(".artist-name").removeClass("invalid")
        localStorage.setItem("artistName", this.artistName)
      }

      if (this.lastFMID.length === 0) {
        $(".last-fm-id").addClass("invalid")
        valid = false
      } else {
        $(".last-fm-id").removeClass("invalid")
        localStorage.setItem("lastFMID", this.lastFMID)
      }

      if (valid === false) {
        this.error = "Please fill out all fields"
        return
      }

      /* AJAX call */
      this.error = ""
      this.activity = true
      var comp = this // pass this into local to carry into ajax return
      var token = retrieveToken()
      if (token !== null) {
        var request = {}
        request.length = comp.length
        request.title = comp.songName
        request.artist = comp.artistName
        request.token = token
        request.lastFmUsername = comp.lastFMID
        request = JSON.stringify(request)
        $.ajax({
          url: 'api/getPlaylist',
          type: 'POST',
          dataType: 'json',
          data: request
        })
        .done(function(data) {
          comp.songs = data
          console.log(data)
        })
        .fail(function(data) {
          console.log("error")
          console.log(data)
          comp.error = "The song and artist couldn't be used. Try again."
        })
        .always(function() {
          comp.activity = false
        })
      } else {
        this.error = "You're currently not logged in to Spotify. Log in and try again."
      }
    },
    createPlaylist: function () {
      this.activity = true
      var comp = this
      var token = retrieveToken()
      if (token !== null) {
        var request = {}
        request.token = token
        request.playlistName = "Generated by Spotkov"
        request.songs = this.songs
        request = JSON.stringify(request)
        $.ajax({
          url: 'api/createPlaylist',
          type: 'POST',
          data: request
        })
        .done(function () {
          comp.error = ""
          console.log("successfully posted to spotify")

        })
        .fail(function () {
          comp.error = "Couldn't connect to Spotify. Please try again later."
          console.log("failed to post to spotify")
        })
        .always(function() {
          comp.activity = false
        })
      } else {
        this.error = "You're currently not logged in to Spotify. Log in and try again."
      }
    }
  }
})
